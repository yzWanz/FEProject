{"remainingRequest":"/Users/youzhawanzi/Downloads/LanhuProject/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/youzhawanzi/Downloads/LanhuProject/src/views/lanhu_tancezhishou_gaojing/index.vue?vue&type=template&id=244d8e12&scoped=true&","dependencies":[{"path":"/Users/youzhawanzi/Downloads/LanhuProject/src/views/lanhu_tancezhishou_gaojing/index.vue","mtime":1681128970000},{"path":"/Users/youzhawanzi/Downloads/LanhuProject/node_modules/cache-loader/dist/cjs.js","mtime":1681200165262},{"path":"/Users/youzhawanzi/Downloads/LanhuProject/node_modules/cache-loader/dist/cjs.js","mtime":1681200165262},{"path":"/Users/youzhawanzi/Downloads/LanhuProject/node_modules/babel-loader/lib/index.js","mtime":1681200165258},{"path":"/Users/youzhawanzi/Downloads/LanhuProject/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1681200163842},{"path":"/Users/youzhawanzi/Downloads/LanhuProject/node_modules/cache-loader/dist/cjs.js","mtime":1681200165262},{"path":"/Users/youzhawanzi/Downloads/LanhuProject/node_modules/vue-loader/lib/index.js","mtime":1681200163839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}